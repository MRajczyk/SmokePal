// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ReadingType {
  TEMP
  HUM
}

model WoodType {
  id             Int              @id @default(autoincrement())
  name           String
}

model ProductType {
  id             Int              @id @default(autoincrement())
  name           String
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @unique
  email          String           @unique
  password       String
  role           Role
  SmokingSession SmokingSession[]
}

model SmokingSensorReading {
  id         Int            @id @default(autoincrement())
  session    SmokingSession @relation(fields: [sessionId], references: [id])
  sessionId  Int
  sensorName String
  value      Float
  type       ReadingType
  timestamp  DateTime @default(now())
}

model SmokingSessionPhoto {
  id        Int            @id @default(autoincrement())
  session   SmokingSession @relation(fields: [sessionId], references: [id])
  sessionId Int
  mime      String
  data      Bytes
}

enum Unit {
    GRAM
    MILILITER
    PIECE
}

model Ingredient {
    id          Int     @id @default(autoincrement())
    name        String  @unique
    unit        Unit
    sessionIngredients   SessionIngredient[]
}

model SessionIngredient {
    id              Int                 @id @default(autoincrement())
    recipe          SmokingSession      @relation(fields: [sessionId], references: [id])
    sessionId       Int
    ingredient      Ingredient          @relation(fields: [ingredientId], references: [id])
    ingredientId    Int
    amount          Float     
}

model SmokingSession {
  id              Int                     @id @default(autoincrement())
  sensorReadings  SmokingSensorReading[]
  photos          SmokingSessionPhoto[]
  author          User?                   @relation(fields: [authorId], references: [id])
  authorId        Int?
  dateStart       DateTime                @default(now())
  dateEnd         DateTime?
  finished        Boolean
  title           String?
  product         String?
  wood            String?
  description     String?
  ingredients     SessionIngredient[]
  tempSensor1Name String?
  tempSensor2Name String?
  tempSensor3Name String?
}
